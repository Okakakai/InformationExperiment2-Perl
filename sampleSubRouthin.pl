sub max {
	if ($_[0] > $_[1]) {
	$_[0];
	} else {
	$_[1];
	}
	}
	$result = &max(40, 30);
	print $result, "\n";
# 	サブルーチンは sub を使って定義します。サブルー
# チンの引数は@_という特別な配列に格納されます。こ
# れらの要素を$_[0] のようにして指定することができ
# ます。サブルーチンの戻り値は、最後に行われた処理
# の結果となります。サブルーチンを呼び出す際は、サ
# ブルーチン名の前に&を付けます。
# サブルーチンの引数は、自分で決めた変数に代入す
# ることもできます。次のプログラムを入力し実行して

	sub max2 {
		my($x, $y);
		($x, $y) = @_;
		if ($x == $y) {
		return "same value";
		}

		if ($x > $y) {
		$x;
		} else {
		$y;
		}
		}
		$result = &max2(40, 30);
		print $result, "\n";
		$result = &max2(50, 50);
		print $result, "\n";

# my 演算子を使ってサブルーチンのブロック内での
# み有効な変数を作ることができます。その変数に@_
# の要素を代入することで、引数を自由に決めた変数で
# 書くことができます。また、return 演算子を使うと、
# サブルーチンの処理を即座に終了し値を返すことがで
# きます。